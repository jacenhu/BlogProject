{"remainingRequest":"/Users/hujincheng/Documents/Projects/myBlog/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/hujincheng/Documents/Projects/myBlog/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/hujincheng/Documents/Projects/myBlog/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/hujincheng/Documents/Projects/myBlog/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/hujincheng/Documents/Projects/myBlog/docs/program/dataStructure/dataStructure.md?vue&type=template&id=a5c4a2aa&","dependencies":[{"path":"/Users/hujincheng/Documents/Projects/myBlog/docs/program/dataStructure/dataStructure.md","mtime":1580308648256},{"path":"/Users/hujincheng/Documents/Projects/myBlog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujincheng/Documents/Projects/myBlog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/hujincheng/Documents/Projects/myBlog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujincheng/Documents/Projects/myBlog/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hujincheng/Documents/Projects/myBlog/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"数据结构（c-language）\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#数据结构（c-language）\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 数据结构（C language）\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"chapter1-绪论\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#chapter1-绪论\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Chapter1 绪论\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"计算\" } }, [\n        _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#计算\" } }, [\n          _vm._v(\"#\")\n        ]),\n        _vm._v(\" 计算\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"computer science 实际上是computing science\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"绳索计算机：工具以及可以重复的步骤\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"尺规计算机\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"算法：计算=信息处理\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [\n          _vm._v(\"借助某种工具，遵照一定规则，以明确而机械的形式进行。\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"计算模型=计算机=信息处理工具\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"算法：在特定计算模型下，解决特定问题的指令序列。\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [_vm._v(\"算法需要正确性、确定性、可行性、有穷性\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"计算模型\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#计算模型\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 计算模型\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"大o记号\" } }, [\n        _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#大o记号\" } }, [\n          _vm._v(\"#\")\n        ]),\n        _vm._v(\" 大O记号\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"算法分析\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#算法分析\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 算法分析\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"迭代与递归\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#迭代与递归\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 迭代与递归\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"动态规划\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#动态规划\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 动态规划\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"chapter2-向量\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#chapter2-向量\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Chapter2 向量\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"chapter3-列表\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#chapter3-列表\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Chapter3 列表\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"chapter4-栈与队列\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#chapter4-栈与队列\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Chapter4 栈与队列\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"chapter5-二叉树\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#chapter5-二叉树\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Chapter5 二叉树\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"先序遍历\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#先序遍历\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 先序遍历\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [_c(\"li\", [_vm._v(\"半线性结构转变为线性结构\")])]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"中序遍历\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#中序遍历\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 中序遍历\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"层次遍历\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#层次遍历\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 层次遍历\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [_c(\"li\", [_vm._v(\"按照深度次序，由高到低访问\")])]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"chapter6-图\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#chapter6-图\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Chapter6 图\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"概述\" } }, [\n        _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#概述\" } }, [\n          _vm._v(\"#\")\n        ]),\n        _vm._v(\" 概述\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [_c(\"li\", [_vm._v(\"G=(V, E)\")])]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [\n          _vm._v(\n            \"V为点集，E为边集;\\nV-V 点与点之间的关系为邻接关系;\\nV-E 点与边之间的关系为关联关系;\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"邻接矩阵\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#邻接矩阵\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 邻接矩阵\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"广度优先搜索\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#广度优先搜索\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 广度优先搜索\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"深度优先搜索\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#深度优先搜索\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 深度优先搜索\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\n            \"访问定点S，若S尚有未被访问的邻居，则任取其一u，递归执行DFS(u);否则，返回。\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"chapter7-二叉搜索树bst\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#chapter7-二叉搜索树bst\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Chapter7 二叉搜索树BST\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"chapter8-高级搜索树\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#chapter8-高级搜索树\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Chapter8 高级搜索树\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"chpater9-词典\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#chpater9-词典\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Chpater9 词典\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"chapter10-优先级队列\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#chapter10-优先级队列\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Chapter10 优先级队列\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"需求与动机\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#需求与动机\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 需求与动机\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [_c(\"li\", [_vm._v(\"场景：夜间门诊\")])]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"chapter11-串\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#chapter11-串\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Chapter11 串\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"adt\" } }, [\n        _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#adt\" } }, [\n          _vm._v(\"#\")\n        ]),\n        _vm._v(\" ADT\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"定义:由来自字母表的字符构成的长度有限的序列\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"chapter12-排序\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#chapter12-排序\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Chapter12 排序\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"快速排序quiksort\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#快速排序quiksort\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 快速排序quiksort\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [_c(\"li\", [_vm._v(\"分而治之\")])]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [\n          _vm._v(\n            \"将序列分为2个子序列\\n在子序列递归的排序知乎，原序列自然有序\\n平凡解：只剩单个元素时，本身就是解\\nquicksort的难点在于分\"\n          )\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}